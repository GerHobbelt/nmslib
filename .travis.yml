language: cpp

sudo: required

addons:
  apt:
    packages: &core_build
    - g++-4.9
    - libblas-dev
    - liblapack-dev
    - gfortran
    - cmake
    - libboost-all-dev
    - libgsl0-dev
    - libeigen3-dev

matrix:
  fast_finish: true
  include:
  - os: linux
    dist: trusty
    env: PYTHON=2.7
    services:
    - docker
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
          - *core_build
          - python2.7-dev
  - os: linux
    env: PYTHON=3.5
    dist: trusty
    services:
    - docker
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
        - *core_build
        - python3.5-dev
  - os: linux
    env: PYTHON=3.6
    dist: xenial
    services:
    - docker
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
        - *core_build
        - python3.6-dev
  - os: linux
    env: PYTHON=3.7
    dist: xenial
    services:
    - docker
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
        - *core_build
        - python3.7-dev
  - os: osx
    env: PYTHON=27
    osx_image: xcode7.3
  - os: osx
    env: PYTHON=35
    osx_image: xcode7.3
  - os: osx
    env: PYTHON=36
    osx_image: xcode7.3
  - os: osx
    env: PYTHON=37
    osx_image: xcode7.3
  - os: osx
    env: PYTHON=27
    osx_image: xcode11.2
  - os: osx
    env: PYTHON=35
    osx_image: xcode11.2
  - os: osx
    env: PYTHON=36
    osx_image: xcode11.2
  - os: osx
    env: PYTHON=37
    osx_image: xcode11.2
  allow_failures:
  - os: osx

before_install:
- |
  PIP=pip
  PY=python
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then 
    export CXX=g++-4.9 CC=gcc-4.9;
  fi

  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    brew update
    brew install gcc
    PIP=pip2
    PY=python2
    if  [ "${PYTHON:0:1}" = "3" ]; then
      travis_wait 30 brew upgrade python
      travis_wait 30 brew install sashkab/python/python$PYTHON
      PIP=pip3
      PY=python3
    fi
  fi
  $PIP install --user virtualenv
  virtualenv -p $PY venv
  source venv/bin/activate
  $PIP install --upgrade pip

install:
- |
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    cmake similarity_search -DWITH_EXTRAS=1
  else
    cmake similarity_search
  fi
  make -j 4
  $PY -m pip install --upgrade pip
  $PIP install scipy six flake8 psutil
  cd python_bindings
  $PIP install -r requirements.txt
  $PY setup.py build_ext
  $PIP install -U .
  cd ..

script:
- $PY --version
- cd python_bindings && $PY setup.py test && cd ..
- |
  set -e
  if [ "$TRAVIS_OS_NAME" = "linux" ] ; then
      cd similarity_search;
      ./release/bunit
      ./release/test_integr integr.log 
      cd ..
  fi

after_script:
  - |
    if [ "$TRAVIS_TAG" ]; then
      mv .pypirc ~/.pypirc
      python -m pip install twine
      if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        # manylinux build
        for PLAT in manylinux1_x86_64 manylinux1_i686 manylinux2010_x86_64; do
          DOCKER_IMAGE=quay.io/pypa/$PLAT
          if [ "$PLAT" == "manylinux1_i686" ]; then
            PRE_CMD=linux32
          else
            PRE_CMD=""
          fi
          docker pull $DOCKER_IMAGE
          docker run --rm -v `pwd`:/io -e PLAT=$PLAT -e PYTHON=$PYTHON $DOCKER_IMAGE $PRE_CMD /io/travis/build-wheels.sh
        done
        WHEEL_DIR="wheelhouse"
      else
        # os x build
        cd python_bindings
        pip install -r dev-requirements.txt
        python setup.py build_ext
        python setup.py sdist bdist_wheel
        WHEEL_DIR="dist"
        cd ..
      fi
      cd python_bindings
      python -m twine upload -r pypi -p $PYPI_PASSWORD --skip-existing ${WHEEL_DIR}/*
    else
      echo "Skipping deployment because this is not a tagged commit"
    fi

cache:
  - apt
  - directories:
    - $HOME/.cache/pip

