language: cpp

sudo: required

addons:
  apt:
    packages: &core_build
    - g++-4.9
    - libblas-dev
    - liblapack-dev
    - gfortran
    - cmake
    - libboost-all-dev
    - libgsl0-dev
    - libeigen3-dev

services:
  - docker

matrix:
  fast_finish: true
  include:
  - os: linux
    dist: trusty
    env: PYTHON=2.7
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
          - *core_build
          - python2.7-dev
  - os: linux
    env: PYTHON=3.5
    dist: trusty
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
        - *core_build
        - python3.5-dev
  - os: linux
    env: PYTHON=3.6
    dist: xenial
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
        - *core_build
        - python3.6-dev
  - os: linux
    env: PYTHON=3.7
    dist: xenial
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
        - *core_build
        - python3.7-dev
  - os: osx
    env: PYTHON=27
    osx_image: xcode9.3
  - os: osx
    env: PYTHON=35
    osx_image: xcode9.3
  - os: osx
    env: PYTHON=36
    osx_image: xcode9.3
  - os: osx
    env: PYTHON=37
    osx_image: xcode9.3
  - services:
      - docker
    env:
      - DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64
  - services:
      - docker
    env:
      - DOCKER_IMAGE=quay.io/pypa/manylinux1_i686
      - PRE_CMD=linux32
  allow_failures:
  - os: osx

before_install:
- |
  PIP=pip
  PY=python
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then 
    export CXX=g++-4.9 CC=gcc-4.9;
  fi

  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    brew update
    brew install gcc
    PIP=pip2
    PY=python2
    if  [ "${PYTHON:0:1}" = "3" ]; then
      brew upgrade python
      brew install sashkab/python/python$PYTHON
      PIP=pip3
      PY=python3
    fi
  fi
  $PIP install --user virtualenv
  virtualenv -p $PY venv
  source venv/bin/activate
  $PIP install --upgrade pip

install:
- |
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    cmake similarity_search -DWITH_EXTRAS=1
  else
    cmake similarity_search
  fi
  make -j 4
  $PY -m pip install --upgrade pip
  $PIP install scipy six flake8 psutil
  cd python_bindings
  $PIP install -r requirements.txt
  $PY setup.py build_ext
  $PIP install -U .
  cd ..

script:
- $PY --version
- cd python_bindings && $PY setup.py test && cd ..
- |
  set -e
  if [ "$TRAVIS_OS_NAME" = "linux" ] ; then
      cd similarity_search;
      ./release/bunit
      ./release/test_integr integr.log 
      cd ..
  fi

deploy:
  provider: script
  script:
  - mv .pypirc ~/.pypirc
  - python -m pip install twine wheel setuptools
  - cd python_bindings
  - DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64
  - docker pull $DOCKER_IMAGE
  - PYPI_USERNAME=scottgigante
  - docker run --rm -v `pwd`:/io -e $PYPI_USERNAME -e $PYPI_PASSWORD $DOCKER_IMAGE $PRE_CMD /io/travis/build-wheels.sh
  - DOCKER_IMAGE=quay.io/pypa/manylinux1_i686
  - PRE_CMD=linux32
  - docker run --rm -v `pwd`:/io -e $PYPI_USERNAME -e $PYPI_PASSWORD $DOCKER_IMAGE $PRE_CMD /io/travis/build-wheels.sh
  - python -m twine upload -r pypi -p $PYPI_PASSWORD --skip-existing wheelhouse/*
  user: scottgigante
  # https://docs.travis-ci.com/user/environment-variables/#defining-variables-in-repository-settings
  password: ${PYPI_PASSWORD}
  distributions: build_ext sdist bdist_wheel
  skip_existing: true
  skip_cleanup: true
  on:
    tags: true
    branch: master

cache:
  - apt
  - directories:
    - $HOME/.cache/pip

